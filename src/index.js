import KeyCode from "./classes/keyCode";

const keyCodes = {
    CANCEL: new KeyCode('0x03', 3, 'Cancel', 'The cancel key.', 'Cancel'),
    HELP: new KeyCode('0x06', 6, 'Help', 'The help key.', 'Help'),
    BACKSPACE: new KeyCode('0x08', 8, 'Backspace', 'The backspace key.', 'Backspace'),
    TAB: new KeyCode('0x09', 9, 'Tab', 'The tab key.', 'Tab'),
    CLEAR: new KeyCode('0x12', 12, 'Clear', '"5" key on Numpad when NumLock is unlocked. Or on Mac, clear key which is positioned at NumLock key.', 'Clear'),
    RETURN: new KeyCode('0x0D', 13, 'Enter', 'The enter or return key.', 'Enter'),
    ENTER: new KeyCode('0x0D', 13, 'Enter', 'The enter or return key.', 'Enter'),
    SHIFT: new KeyCode('0x10', 16, 'Shift', 'One of the shift keys.', 'Shift'),
    CONTROL: new KeyCode('0x11', 17, 'Control', 'One of the control keys.', 'Control'),
    ALT: new KeyCode('0x12', 18, 'Alt', 'The alt or option key.', 'Alt'),
    PAUSE: new KeyCode('0x13', 19, 'Pause', 'The pause key.', 'Pause'),
    CAPS_LOCK: new KeyCode('0x14', 20, 'Caps Lock', 'The caps lock key.', 'CapsLock'),
    FUNCTION: new KeyCode('0x3F', -1, 'Function', "The Fn (Function modifier) key. Used to allow generating function key (F1â€“F15, for instance) characters on keyboards without a dedicated function key area. Often handled in hardware so that events aren't generated for this key.", 'Fn'),

    KANA: new KeyCode('0x15', 21, 'Kana'),
    HANGUL: new KeyCode('0x15', 21, 'Hangul', 'The Hangul (Korean character set) mode key, which toggles between Hangul and English entry modes.', 'HangulMode'),
    EISU: new KeyCode('0x16', 22, 'Esiu'),
    JUNJA: new KeyCode('0x17', 23, 'Junja', 'Selects the Junja mode, in which Korean is represented using single-byte Latin characters.', 'JunjaMode'),
    FINAL: new KeyCode('0x18', 24, 'Final', 'The Final (Final Mode) key is used on some Asian keyboards to enter final mode when using IMEs.', 'FinalMode'),
    HANJA: new KeyCode('0x19', 25, 'Hanja', 'Selects the Hanja mode, for converting Hangul characters to the more specific Hanja characters.', 'HanjaMode'),
    KANJI: new KeyCode('0x20', 26, 'Kanji'),

    ESCAPE: new KeyCode('0x1B', 27, 'Escape', 'The escape key.', 'Escape'),
    CONVERT: new KeyCode('0x1C', 28, 'Convert', 'The Convert key, which instructs the IME to convert the current input method sequence into the resulting character.', 'Convert'),
    NONCONVERT: new KeyCode('0x1D', 29, 'Nonconvert', "The NonConvert ('Don't convert') key. This accepts the current input method sequence without running conversion when using an IME.", 'NonConvert'),
    ACCEPT: new KeyCode('0x1E', 30, 'Accept', 'Accept'),
    MODE_CHANGE: new KeyCode('0x1F', 31, 'Mode Change', 'The Mode Change key. Toggles or cycles among input modes of IMEs.', 'ModeChange'),
    SPACE: new KeyCode('0x20', 32, 'Space', 'The space bar.', ' '),
    PAGE_UP: new KeyCode('0x21', 33, 'Page Up', 'The page up key.', 'PageUp'),
    PAGE_DOWN: new KeyCode('0x22', 34, 'Page Down', 'The page down key.', 'PageDown'),
    END: new KeyCode('0x23', 35, 'End', 'The end key.', 'End'),
    HOME: new KeyCode('0x24', 36, 'Home', 'The home key.', 'Home'),

    // Arrow Keys
    LEFT: new KeyCode('0x25', 37, 'Left', 'The left arrow.', 'ArrowLeft'),
    UP: new KeyCode('0x26', 38, 'Up', 'The up arrow.', 'ArrowUp'),
    RIGHT: new KeyCode('0x27', 39, 'Right', 'The right arrow.', 'ArrowRight'),
    DOWN: new KeyCode('0x28', 40, 'Down', 'The down arrow.', 'ArrowDown'),

    SELECT: new KeyCode('0x29', 41, 'Select', 'The select key.', 'Select'),
    PRINT: new KeyCode ('0x2A', 42, 'Print', 'Prints the current document or message.', 'Print'),
    EXECUTE: new KeyCode('0x2B', 43, 'Execute', 'The Execute key.', 'Execute'),
    PRINT_SCREEN: new KeyCode('0x2C', 44, 'Print Screen', 'The PrintScreen or PrtScr key. Sometimes SnapShot. Captures the screen and prints it or saves it to disk.', 'PrintScreen'),
    INSERT: new KeyCode('0x2D', 45, 'Insert', 'The Ins(ert) key.', 'Insert'),
    DELETE: new KeyCode('0x2E', 46, 'Delete', 'The del(ete) key.', 'Delete'),

    // Standard Number Keys
    0: new KeyCode('0x30', 48, '0', 'The 0 key in the "standard" location.' , '0'),
    1: new KeyCode('0x31', 49, '1', 'The 1 key in the "standard" location.', '1'),
    2: new KeyCode('0x32', 50, '2', 'The 2 key in the "standard" location.', '2'),
    3: new KeyCode('0x33', 51, '3', 'The 3 key in the "standard" location.', '3'), 
    4: new KeyCode('0x34', 52, '4', 'The 4 key in the "standard" location.', '4'),
    5: new KeyCode('0x35', 53, '5', 'The 5 key in the "standard" location.', '5'),
    6: new KeyCode('0x36', 54, '6', 'The 6 key in the "standard" location.', '6'),
    7: new KeyCode('0x37', 55, '7', 'The 7 key in the "standard" location.', '7'),
    8: new KeyCode('0x38', 56, '8', 'The 8 key in the "standard" location.', '8'),
    9: new KeyCode('0x39', 57, '9', 'The 9 key in the "standard" location.', '9'),

    COLON: new KeyCode('0x3A', 58, 'Colon', 'The colon key.', ':'),
    SEMICOLON: new KeyCode('0x3B', 59, 'Semicolon', 'The semicolon key.', ';'),
    LESS_THAN: new KeyCode('0x3C', 60, 'Less Then', 'The less than (<) key.', '<'),
    EQUALS: new KeyCode('0x3D', 61, 'Equals', 'The equals (=) key.', '='),
    GREATER_THAN: new KeyCode('0x3E', 62, 'Greater Than', 'The greater than (>) key.', '>'),
    QUESTION_MARK: new KeyCode('0x3F', 63, 'Question Mark', 'The question mark (?) key.', '?'),
    AT: new KeyCode('0x40', 64, 'Atmark', 'The atmark (@) key.', '@'),

    // Lowercase Letter Keys
    A: new KeyCode('0x41', 65, 'a', 'The a key.', 'a'),
    B: new KeyCode('0x42', 66, 'b', 'The b key.', 'b'),
    C: new KeyCode('0x43', 67, 'c', 'The c key.', 'c'),
    D: new KeyCode('0x44', 68, 'd', 'The d key.', 'd'),
    E: new KeyCode('0x45', 69, 'e', 'The e key.', 'e'),
    F: new KeyCode('0x46', 70, 'f', 'The f key.', 'f'),
    G: new KeyCode('0x47', 71, 'g', 'The g key.', 'g'),
    H: new KeyCode('0x48', 72, 'h', 'The h key.', 'h'),
    I: new KeyCode('0x49', 73, 'i', 'The i key.', 'i'),
    J: new KeyCode('0x4A', 74, 'j', 'The j key.', 'j'),
    K: new KeyCode('0x4B', 75, 'k', 'The k key.', 'k'),
    L: new KeyCode('0x4C', 76, 'l', 'The l key.', 'l'),
    M: new KeyCode('0x4D', 77, 'm', 'The m key.', 'm'),
    N: new KeyCode('0x4E', 78, 'n', 'The n key.', 'n'),
    O: new KeyCode('0x4F', 79, 'o', 'The o key.', 'o'),
    P: new KeyCode('0x50', 80, 'p', 'The p key.', 'p'),
    Q: new KeyCode('0x51', 81, 'q', 'The q key.', 'q'),
    R: new KeyCode('0x52', 82, 'r', 'The r key.', 'r'),
    S: new KeyCode('0x53', 83, 's', 'The s key.', 's'),
    T: new KeyCode('0x54', 84, 't', 'The t key.', 't'),
    U: new KeyCode('0x55', 85, 'u', 'The u key.', 'u'),
    V: new KeyCode('0x56', 86, 'v', 'The v key.', 'v'),
    W: new KeyCode('0x57', 87, 'w', 'The w key.', 'w'),
    X: new KeyCode('0x58', 88, 'x', 'The x key.', 'x'),
    Y: new KeyCode('0x59', 89, 'y', 'The y key.', 'y'),
    Z: new KeyCode('0x5A', 90, 'z', 'The z key.', 'z'),

    // Uppercase Letter Keys
    A: new KeyCode('0x41', 65, 'A', 'The A key.', 'A'),
    B: new KeyCode('0x42', 66, 'B', 'The B key.', 'B'),
    C: new KeyCode('0x43', 67, 'C', 'The C key.', 'C'),
    D: new KeyCode('0x44', 68, 'D', 'The D key.', 'D'),
    E: new KeyCode('0x45', 69, 'E', 'The E key.', 'E'),
    F: new KeyCode('0x46', 70, 'F', 'The F key.', 'F'),
    G: new KeyCode('0x47', 71, 'G', 'The G key.', 'G'),
    H: new KeyCode('0x48', 72, 'H', 'The H key.', 'H'),
    I: new KeyCode('0x49', 73, 'I', 'The I key.', 'I'),
    J: new KeyCode('0x4A', 74, 'J', 'The J key.', 'J'),
    K: new KeyCode('0x4B', 75, 'K', 'The K key.', 'K'),
    L: new KeyCode('0x4C', 76, 'L', 'The L key.', 'L'),
    M: new KeyCode('0x4D', 77, 'M', 'The M key.', 'M'),
    N: new KeyCode('0x4E', 78, 'N', 'The N key.', 'N'),
    O: new KeyCode('0x4F', 79, 'O', 'The O key.', 'O'),
    P: new KeyCode('0x50', 80, 'P', 'The P key.', 'P'),
    Q: new KeyCode('0x51', 81, 'Q', 'The Q key.', 'Q'),
    R: new KeyCode('0x52', 82, 'R', 'The R key.', 'R'),
    S: new KeyCode('0x53', 83, 'S', 'The S key.', 'S'),
    T: new KeyCode('0x54', 84, 'T', 'The T key.', 'T'),
    U: new KeyCode('0x55', 85, 'U', 'The U key.', 'U'),
    V: new KeyCode('0x56', 86, 'V', 'The V key.', 'V'),
    W: new KeyCode('0x57', 87, 'W', 'The W key.', 'W'),
    X: new KeyCode('0x58', 88, 'X', 'The X key.', 'X'),
    Y: new KeyCode('0x59', 89, 'Y', 'The Y key.', 'Y'),
    Z: new KeyCode('0x5A', 90, 'Z', 'The Z key.', 'Z'),

    WIN: new KeyCode('0x5B', 91, 'Windows Key', 'The Windows key on Windows, Super on Mac, or Hyper on Linux.'),
    CONTEXT_MENU: new KeyCode('0x5D', 93, 'Context Menu', 'The context menu key.'),
    SLEEP: new KeyCode('0x5F', 95, 'Sleep'),

    // Numpad Keys
    NUMPAD0: new KeyCode('0x60', 96, '0', '"0" on the numeric keypad.', '0'),
    NUMPAD1: new KeyCode('0x61', 97, '1', '"1" on the numeric keypad.', '1'),
    NUMPAD2: new KeyCode('0x62', 98, '2', '"2" on the numeric keypad.', '2'),
    NUMPAD3: new KeyCode('0x63', 99, '3', '"3" on the numeric keypad.', '3'),
    NUMPAD4: new KeyCode('0x64', 100, '4', '"4" on the numeric keypad.', '4'),
    NUMPAD5: new KeyCode('0x65', 101, '5', '"5" on the numeric keypad.', '5'),
    NUMPAD6: new KeyCode('0x66', 102, '6 ', '"6" on the numeric keypad.', '6'),
    NUMPAD7: new KeyCode('0x67', 103, '7', '"7" on the numeric keypad.', '7'),
    NUMPAD8: new KeyCode('0x68', 104, '8', '"8" on the numeric keypad.', '8'),
    NUMPAD9: new KeyCode('0x69', 105, '9', '"8" on the numeric keypad.', '9'),
    MULTIPLY: new KeyCode('0x6A', 106, '*', 'The "*" key on the numeric keypad.', 'Multiply'),
    ADD: new KeyCode('0x6B', 107, '+', 'The "+" key on the numeric keypad.', 'Add'),
    SEPARATOR: new KeyCode('0x6C', 108, 'Separator', "The numeric keypad's places separator character. (In the United States this is a comma, but elsewhere it is frequently a period.)", 'Separator'),
    SUBTRACT: new KeyCode('0x6D', 109, '-', 'The "-" key on the numeric keypad.', 'Subtract'),
    DECIMAL: new KeyCode('0x6E', 110, '.', 'The decimal point on the numeric keypad.', 'Decimal'),
    DIVIDE: new KeyCode('0x6F', 111, '/', 'The division key on the numeric keypad.', 'Divide'),

    // Function Keys
    F1: new KeyCode('0x70', 112, 'F1', 'The F1 key.' , 'F1'),
    F2: new KeyCode('0x71', 113, 'F2', 'The F2 key.', 'F2'),
    F3: new KeyCode('0x72', 114, 'F3', 'The F3 key.', 'F3'),
    F4: new KeyCode('0x73', 115, 'F4', 'The F4 key.', 'F4'),
    F5: new KeyCode('0x74', 116, 'F5', 'The F5 key.', 'F5'),
    F6: new KeyCode('0x75', 117, 'F6', 'The F6 key.', 'F6'),
    F7: new KeyCode('0x76', 118, 'F7', 'The F7 key.', 'F7'),
    F8: new KeyCode('0x77', 119, 'F8', 'The F8 key.', 'F8'),
    F9: new KeyCode('0x78', 120, 'F9', 'The F9 key.', 'F9'),
    F10: new KeyCode('0x79', 121, 'F10', 'The F10 key.', 'F10'),
    F11: new KeyCode('0x7A', 122, 'F11', 'The F11 key.', 'F11'),
    F12: new KeyCode('0x7B', 123, 'F12', 'The F12 key.', 'F12'),
    F13: new KeyCode('0x7C', 124, 'F13', 'The F13 key.', 'F13'),
    F14: new KeyCode('0x7D', 125, 'F14', 'The F14 key.', 'F14'),
    F15: new KeyCode('0x7E', 126, 'F15', 'The F15 key.', 'F15'),
    F16: new KeyCode('0x7F', 127, 'F16', 'The F16 key.', 'F16'),
    F17: new KeyCode('0x80', 128, 'F17', 'The F17 key.', 'F17'),
    F18: new KeyCode('0x81', 129, 'F18', 'The F18 key.', 'F18'),
    F19: new KeyCode('0x82', 130, 'F19', 'The F19 key.', 'F19'),
    F20: new KeyCode('0x83', 131, 'F20', 'The F20 key.', 'F20'),
    F21: new KeyCode('0x84', 132, 'F21', 'The F21 key.', 'F21'),
    F22: new KeyCode('0x85', 133, 'F22', 'The F22 key.', 'F22'),
    F23: new KeyCode('0x86', 134, 'F23', 'The F23 key.', 'F23'),
    F24: new KeyCode('0x87', 135, 'F24', 'The F24 key.', 'F24'),

    NUM_LOCK: new KeyCode('0x90', 144, 'Num Lock', 'The Num Lock key.', 'NumLock'),
    SCROLL_LOCK: new KeyCode('0x91', 145, 'Scroll Lock', 'The Scroll Lock key.', 'ScrollLock'),

    // Fujitsu OASYS Specific Keys
    WIN_OEM_FJ_JISHO: new KeyCode('0x92', 146, 'Jisho', 'An OEM specific key on Windows. This was used for "Dictionary" key on Fujitsu OASYS.'),
    WIN_OEM_FJ_MASSHOU: new KeyCode('0x93', 147, 'Masshou', 'An OEM specific key on Windows. This was used for "Unregister word" key on Fujitsu OASYS.'),
    WIN_OEM_FJ_TOUROKU: new KeyCode('0x94', 148, 'Touroku', 'An OEM specific key on Windows. This was used for "Register word" key on Fujitsu OASYS.'),
    WIN_OEM_FJ_LOYA: new KeyCode('0x95', 149, 'Loya', 'An OEM specific key on Windows. This was used for "Left OYAYUBI" key on Fujitsu OASYS.'),
    WIN_OEM_FJ_ROYA: new KeyCode('0x96', 150, 'Roya', 'An OEM specific key on Windows. This was used for "Right OYAYUBI" key on Fujitsu OASYS.'),

    CIRCUMFLEX: new KeyCode('0xA0', 160, 'Circumflex', 'The circumflex (^) key.'),
    EXCLAMATION: new KeyCode('0xA1', 161, 'Exclamation', 'The exclamation (!) key.'),
    DOUBLE_QUOTE: new KeyCode('0xA2', 162, 'Double Quote', 'The double quote (") key.'),
    HASH: new KeyCode('0xA3', 163, 'Hash', 'The hash (#) key.'),
    DOLLAR: new KeyCode('0xA4', 164, 'Dollar Sign', 'The dollar sign ($) key.'),
    PERCENT: new KeyCode('0xA5', 165, 'Percent', 'The percent (%) key.'),
    AMPERSAND: new KeyCode('0xA6', 166, 'Ampersand', 'The ampersand (&) key.'),
    UNDERSCORE: new KeyCode('0xA7', 167, 'Underscore', 'The underscore (_) key.'),
    OPEN_PAREN: new KeyCode('0xA8', 168, 'Open Paren', 'The open paren (() key.'),
    CLOSE_PAREN: new KeyCode('0xA9', 169, 'Close Paren', 'The close paren ()) key.'),
    ASTERISK: new KeyCode('0xAA', 170, 'Asterisk', 'The asterisk (*) key.'),
    PLUS: new KeyCode('0xAB', 171, 'Plus', 'The plus (+) key.'),
    PIPE: new KeyCode('0xAC', 172, 'Asterisk', 'The asterisk (*) key.'),
    HYPHEN_MINUS: new KeyCode('0xAD', 173, 'Hyphen/Minus', 'The hyphen or minus (-) key.'),
    OPEN_CURLY_BRACKET: new KeyCode('0xAE', 174, 'Open Bracket', 'The open bracket ({) key.'),
    CLOSE_CURLY_BRACKET: new KeyCode('0xAF', 175, 'Close Bracket', 'The close bracket (}) key.'),
    TILDE: new KeyCode('0xB0', 176, 'Tilde', 'The tilde (~) key.'),

    // Volume Keys
    VOLUME_MUTE: new KeyCode('0xB5', 181, 'Volume Mute', 'The audio mute key.'),
    VOLUME_DOWN: new KeyCode('0xB6', 182, 'Volume Down', 'The audio volume down key.'),
    VOLUME_UP: new KeyCode('0xB7', 183, 'Volume Up', 'The audio volume up key.'),

    PERIOD: new KeyCode('0xBE', 190, 'Period', 'The period key.'),
    SLASH: new KeyCode('0xBF', 191, 'Slash', 'The slash key.'),
    BACK_QUOTE: new KeyCode('0xC0', 192, '`', 'The back tick (`) key.'),
    OPEN_BRACKET: new KeyCode('0xDB', 219, '[', 'The open bracket ([) key.'),
    BACK_SLASH: new KeyCode('0xDC', 220, '\\', 'The backslash (\\) key.'),
    CLOSE_BRACKET: new KeyCode('0xDD', 221, ']', 'The close bracket (]) key.'),
    QUOTE: new KeyCode('0xDE', 222, '\'', 'The quote (\') key.'),

    META: new KeyCode('0xE0', 224, 'Meta', 'The meta key on Linux, or Command on Mac.', 'Meta'),
    COMMAND: new KeyCode('0xE0', 224, 'Command', 'The meta key on Linux, or Command on Mac.', 'Meta'),
    ALTGR: new KeyCode('0xE1', 225, 'Alt Graph', 'The AltGr key (Level 3 Shift key or Level 5 Shift key) on Linux.', 'AltGraph'),

    // Olivetti ICO Keys
    WIN_ICO_HELP: new KeyCode('0xE3', 227, 'ICO Help'),
    WIN_ICO_00: new KeyCode('0xE4', 228, 'ICO 00'),
    WIN_ICO_CLEAR: new KeyCode('0xE6', 230, 'ICO Clear'),

    // Nokia/Ericsson Keys
    WIN_OEM_RESET: new KeyCode('0xE9', 233, 'OEM Reset'),
    WIN_OEM_JUMP: new KeyCode('0xEA', 234, 'OEM Jump'),
    WIN_OEM_PA1: new KeyCode('0xEB', 235, 'OEM PA1'),
    WIN_OEM_PA2: new KeyCode('0xEC', 236, 'OEM PA2'),
    WIN_OEM_PA3: new KeyCode('0xED', 237, 'OEM PA3'),
    WIN_OEM_WSCTRL: new KeyCode('0xEE', 238, 'OEM WSCTRL'),
    WIN_OEM_CUSEL: new KeyCode('0xEF', 239, 'OEM CUSEL'),
    WIN_OEM_ATTN: new KeyCode('0xF0', 240, 'OEM ATTN' ,'Attn'),
    WIN_OEM_FINISH: new KeyCode('0xF1', 241, 'OEM FINISH', 'The Finish key.', 'Finish'),
    WIN_OEM_COPY: new KeyCode('0xF2', 242, 'OEM COPY', 'Hiragana'),
    WIN_OEM_AUTO: new KeyCode('0xF3', 243, 'OEM AUTO', 'Hankaku'),
    WIN_OEM_ENLW: new KeyCode('0xF4', 244, 'OEM ENLW', 'Zenkaku'),
    WIN_OEM_BACKTAB: new KeyCode('0xF5', 245, 'OEM BACK TAB', 'Romaji'),

    ATTN: new KeyCode('0xF6', 246, 'Attn', 'Attn (Attention) key of IBM midrange computers, e.g., AS/400.', 'Attn'),
    CRSEL: new KeyCode('0xF7', 247, 'CrSel', 'CrSel (Cursor Selection) key of IBM 3270 keyboard layout.', 'CrSel'),
    EXSEL: new KeyCode('0xF8', 248, 'ExSel', 'ExSel (Extend Selection) key of IBM 3270 keyboard layout.', 'ExSel'),
    EREOF: new KeyCode('0xF9', 249, 'Erase EOF', 'Erase EOF key of IBM 3270 keyboard layout.', 'EraseEof'),
    PLAY: new KeyCode('0xFA', 250, 'Play', 'Play key of IBM 3270 keyboard layout.', 'Play'),
    ZOOM: new KeyCode('0xFB', 251, 'Zoom', 'The Zoom key.', 'ZoomToggle'),
    PA1: new KeyCode('0xFD', 253, 'PA1', 'The PA1 key of IBM 3270 keyboard layout.'),
    WIN_OEM_CLEAR: new KeyCode('0xFE', 254, 'Clear', 'The Clear key on Windows.', 'Clear'),

    UNIDENTIFIED: new KeyCode('', '', '', '', 'Unidentified'),
}

export default keyCodes;